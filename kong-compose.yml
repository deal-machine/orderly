# version: '3.7'

# networks:
#   kong-net:
#     driver: bridge
#     external: false

# volumes:
#   postgres_data:
#     driver: local
#   postgres:

# services:

#   rabbitmq:
#     image: rabbitmq:3.12-management
#     container_name: rabbitmq-server
#     ports:
#     - 15672:15672
#     - 5672:5672
#     environment:
#     - RABBITMQ_ERLANG_COOKIE=${AMQP_COOKIE}
#     - RABBITMQ_DEFAULT_USER=${AMQP_USERNAME}
#     - RABBITMQ_DEFAULT_PASS=${AMQP_PASSWORD}
#     env_file:
#     - .env.production
#     networks:
#     - kong-net

#   postgres:
#     image: postgres:16
#     container_name: postgres-database
#     ports:
#     - 5432:5432
#     environment:
#       POSTGRES_USER: ${DB_USERNAME}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       POSTGRES_DB: ${DB_NAME}
#       PGDATA: /data/postgres
#     env_file:
#     - .env.production
#     volumes:
#     - postgres:/data/postgres
#     networks:
#     - kong-net
#     restart: unless-stopped

#   api:
#     build: .
#     container_name: api-v2
#     networks:
#     - kong-net
#     depends_on:
#     - rabbitmq
#     - postgres
#     restart: on-failure
#     links:
#     - postgres
#     - rabbitmq
#     ports:
#     - 3000:3000
#     env_file:
#     - .env.production

#   # setup do banco de dados para o uso do kong
#   kong-database:
#     image: postgres:16
#     container_name: kong-database
#     restart: on-failure
#     networks:
#     - kong-net
#     environment:
#       POSTGRES_USER: kong
#       POSTGRES_DB: kong
#       POSTGRES_PASSWORD: kong
#     healthcheck:
#       test: ["CMD", "pg_isready", "-U", "kong"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   # inicialização do banco de dados com tabelas necessárias para uso do kong
#   kong-migrations:
#     image: kong:3.3.1-alpine
#     container_name: kong-migrations
#     restart: on-failure
#     networks:
#     - kong-net
#     depends_on:
#     - kong-database
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_HOST: kong-database
#       KONG_PG_USER: kong
#       KONG_PG_PASSWORD: kong
#     command: kong migrations bootstrap

#   # preenchimento de dados para uso do kong
#   kong-migrations-up:
#     image: kong:3.3.1-alpine
#     container_name: kong-migrations-up
#     depends_on:
#     - kong-database
#     networks:
#     - kong-net
#     restart: on-failure
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_HOST: kong-database
#       KONG_PG_USER: kong
#       KONG_PG_PASSWORD: kong
#     command: kong migrations up && kong migrations finish

#   kong:
#     image: kong:3.3.1-alpine
#     container_name: kong-v2
#     environment:
#       KONG_DATABASE: postgres
#       KONG_PG_HOST: kong-database
#       KONG_PG_USER: kong
#       KONG_PG_PASSWORD: kong
#       KONG_PROXY_ACCESS_LOG: /dev/stdout
#       KONG_ADMIN_ACCESS_LOG: /dev/stdout
#       KONG_ADMIN_ERROR_LOG: /dev/stderr
#       KONG_PROXY_ERROR_LOG: /dev/stderr
#       KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
#       KONG_PROXY_ADMIN_API_PORT: 8001
#       KONG_PROXY_ADMIN_SSL_API_PORT: 8444
#       KONG_PLUGINS: "bundled"
#     networks:
#     - kong-net
#     ports:
#     - 8000:8000
#     - 8001:8001
#     - 8444:8444
#     - 8002:8002
#     healthcheck:
#       test: ["CMD", "kong", "health"]
#       interval: 10s
#       timeout: 10s
#       retries: 10
#     restart: on-failure

#   # setup do banco de dados para o uso do keycloak
#   keycloak-database:
#     image: postgres:16
#     container_name: keycloak-database
#     restart: on-failure
#     volumes:
#     - postgres_data:/var/lib/postgresql/data
#     environment:
#       POSTGRES_USER: keycloak
#       POSTGRES_DB: keycloak
#       POSTGRES_PASSWORD: keycloak

#   keycloak:
#     image: quay.io/keycloak/keycloak:23.0.7
#     container_name: keycloak-v2
#     environment:
#       DB_ADDR: keycloak-database
#       DB_DATABASE: keycloak
#       DB_USER: keycloak
#       DB_SCHEMA: public
#       DB_PASSWORD: keycloak
#       KEYCLOAK_ADMIN: admin
#       KEYCLOAK_ADMIN_PASSWORD: adm1n
#     restart: on-failure
#     ports:
#     - 8080:8080
#     command: ["start-dev"]
#     depends_on:
#     - keycloak-database

#   # painel administrativo para uso do kong
#   konga:
#     image: pantsel/konga
#     container_name: konga-panel
#     networks:
#     - kong-net
#     deploy:
#       restart_policy:
#         condition: on-failure
#     depends_on:
#     - kong-database
#     environment:
#       NODE_ENV: development
#     ports:
#     - 1337:1337
