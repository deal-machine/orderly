# docker for kong setup
version: '3'
services:
  postgres:
    image: postgres:14
    # container_name: postgres-kong
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=dbkong
      - POSTGRES_USER=userkong
      - POSTGRES_PASSWORD=passwordkong
    healthcheck:
      test: ['CMD', 'pg_isready', '--dbname=dbkong', '--usename=userkong']
      interval: 5s
      timeout: 5s
      retries: 6
    networks:
      - netkong
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
  
  kong-setup:
    image: kong:2.6.0 # 3.6.0-ubuntu <- latest
    # container_name: kong-setup
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_DATABASE=dbkong
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=userkong
      - KONG_PG_PASSWORD=passwordkong
      - KONG_CASSANDRA_CONTACT_POINTS=postgres
    command: kong migrations bootstrap
    restart: on_failure
    networks:
      - netkong
    depends_on:
      - postgres
  
  kong:
    image: kong:2.6.0
    # container_name: kong
    environment:
      - KONG_PG_DATABASE=dbkong
      - KONG_PG_HOST=postgres
      - KONG_PG_USER=userkong
      - KONG_PG_PASSWORD=passwordkong
      - KONG_CASSANDRA_CONTACT_POINTS=postgres
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    healthcheck:
      test: ['CMD', 'curl', 'http://kong:8001']
      interval: 5s
      timeout: 2s
      retries: 16
    restart: on_failure
    ports:
      - 8000:8000 # trafego
      - 8443:8443 # trafego
      - 8001:8001 # api administrativa
      - 8444:8444 # api administrativa
    networks:
      - netkong
    depends_on:
      - kong-setup

